apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "{{ add .Values.syncwave 3 }}"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true,Validate=false
    sonataflow.org/description: YAML based greeting workflow
    sonataflow.org/expressionLang: jq
    sonataflow.org/profile: gitops
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: greeting
    sonataflow.org/workflow-app: greeting
  name: greeting
spec:
  flow:
    annotations:
      - workflow-type/infrastructure
    dataInputSchema:
      failOnValidationErrors: true
      schema: schemas/greeting.sw.input-schema.json
    functions:
      - name: greetFunction
        operation: sysout
        type: custom
      - name: successResult
        operation: '{ "result": { "completedWith":"success", "message": "Greeting workflow completed successfully", "outputs":[ { "key":"Selected language", "value": .language }, { "key":"Greeting message", "value": .greeting } ] } }'
        type: expression
    start:
      stateName: ChooseOnLanguage
    states:
      - dataConditions:
          - condition: .language  == "English"
            transition:
              nextState: GreetInEnglish
          - condition: .language  == "Spanish"
            transition:
              nextState: GreetInSpanish
        defaultCondition:
          transition:
            nextState: GreetInEnglish
        name: ChooseOnLanguage
        type: switch
      - data:
          greeting: Hello from YAML Workflow
        name: GreetInEnglish
        transition:
          nextState: GreetPerson
        type: inject
      - data:
          greeting: Saludos desde YAML Workflow
        name: GreetInSpanish
        transition:
          nextState: GreetPerson
        type: inject
      - actionMode: sequential
        actions:
          - actionDataFilter:
              useResults: true
            functionRef:
              arguments:
                message: .greeting
              invoke: sync
              refName: greetFunction
            name: greetAction
          - actionDataFilter:
              useResults: true
            functionRef:
              invoke: sync
              refName: successResult
            name: setOutput
        end:
          terminate: true
        name: GreetPerson
        type: operation
  podTemplate:
    container:
      resources: {}
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
  resources:
    configMaps:
      - configMap:
          name: greeting-resources-schemas
        workflowPath: schemas
  persistence:
    postgresql:
      {{- toYaml .Values.persistence.postgresql | nindent 6 }}
