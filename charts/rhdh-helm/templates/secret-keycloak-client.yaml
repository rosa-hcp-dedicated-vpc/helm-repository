apiVersion: batch/v1
kind: Job
metadata:
  name: copy-keycloak-secret-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  template:
    spec:
      serviceAccountName: keycloak-secret-copier
      restartPolicy: Never
      containers:
      - name: secret-copier
        image: registry.redhat.io/openshift4/ose-cli:latest
        command:
        - /bin/bash
        - -c
        - |
          
          # Wait for the Keycloak client secret to be created by RHSSO operator
          echo "Waiting for keycloak-client-secret-backstage to be created in rhsso-operator namespace..."
          TIMEOUT=300  # 5 minutes timeout
          COUNTER=0
          
          while [ $COUNTER -lt $TIMEOUT ]; do
            if oc get secret keycloak-client-secret-backstage -n rhsso-operator >/dev/null 2>&1; then
              echo "Secret found! Proceeding with copy..."
              break
            else
              echo "Secret not found yet. Waiting... ($COUNTER/$TIMEOUT seconds)"
              sleep 10
              COUNTER=$((COUNTER + 10))
            fi
          done
          
          if [ $COUNTER -ge $TIMEOUT ]; then
            echo "ERROR: Timeout waiting for keycloak-client-secret-backstage secret in rhsso-operator namespace"
            exit 1
          fi
          
          # Copy secret from rhsso-operator namespace to backstage namespace
          echo "Copying secret from rhsso-operator to {{ .Release.Namespace }} namespace..."
          oc get secret keycloak-client-secret-backstage -n rhsso-operator -o yaml | \
          sed 's/namespace: rhsso-operator/namespace: {{ .Release.Namespace }}/' | \
          sed '/resourceVersion:/d' | \
          sed '/uid:/d' | \
          sed '/creationTimestamp:/d' | \
          sed '/ownerReferences:/,+10d' | \
          oc apply -f -
          
          echo "Secret successfully copied to {{ .Release.Namespace }} namespace!"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-secret-copier
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak-secret-copier
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
rules:
- apiGroups: [""]
  resources: ["secrets", "namespaces"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak-secret-copier-{{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
subjects:
- kind: ServiceAccount
  name: keycloak-secret-copier
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: keycloak-secret-copier
  apiGroup: rbac.authorization.k8s.io
