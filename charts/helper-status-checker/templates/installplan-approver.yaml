{{- with .Values }}
{{ if eq ( .approver | toString) "true" }}
{{- range .checks }}
{{ if ne ( .approver | toString) "false" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .serviceAccount.name }}-installplan-approver
  namespace: {{ .namespace.name | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ .syncwave | default 0 | quote }}
  labels:
    {{- include "common.labels" $ | nindent 4 }}
spec:
  backoffLimit: 3  # Retry up to 3 times if job fails
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli
          command:
            - /bin/bash
            - -c
            - |
              export HOME=/tmp/approver

              echo "Approving operator install.  Waiting a few seconds to make sure the InstallPlan gets created first."
              sleep_timer={{ .sleeptimer | default 45 }}

              SLEEPER_TMP=0
               while [[ $SLEEPER_TMP -le "$sleep_timer" ]]; do
                 echo -n "."
                 sleep 1
                 SLEEPER_TMP=$(($SLEEPER_TMP+1))
               done

              {{- if .subscriptionName }}
              subscription={{ .subscriptionName }}
              {{- else }}
              subscription={{ .operatorName }}
              {{- end }}

              printf "\n\nProcessing subscription '$subscription'\n"

              # Retry logic for getting InstallPlan
              max_retries=10
              retry_count=0
              installplan=""
              
              while [ $retry_count -lt $max_retries ] && [ -z "$installplan" ]; do
                printf "\nAttempt $((retry_count + 1))/$max_retries: Getting InstallPlan for subscription '$subscription'\n"
                
                # Try to get the InstallPlan name
                installplan=$(oc get subs ${subscription} -o jsonpath='{.status.installPlanRef.name}' 2>/dev/null || echo "")
                
                if [ -z "$installplan" ]; then
                  printf "No InstallPlan found yet, waiting 10 seconds before retry...\n"
                  sleep 10
                  retry_count=$((retry_count + 1))
                else
                  printf "Found InstallPlan: $installplan\n"
                  break
                fi
              done

              # Exit with error if no InstallPlan found after retries
              if [ -z "$installplan" ]; then
                printf "\nERROR: Could not find InstallPlan for subscription '$subscription' after $max_retries attempts\n"
                exit 1
              fi

              printf "\nCheck installplan approved status\n"

              # Check if InstallPlan exists and get approval status
              if ! oc get installplan $installplan >/dev/null 2>&1; then
                printf "\nERROR: InstallPlan '$installplan' not found\n"
                exit 1
              fi

              approved=$(oc get installplan $installplan -o jsonpath="{.spec.approved}" 2>/dev/null || echo "")
              
              if [ "$approved" == "false" ]; then
                printf "\nApproving Subscription $subscription with install plan $installplan\n"

                if oc patch installplan $installplan --type=json -p='[{"op":"replace","path": "/spec/approved", "value": true}]'; then
                  printf "\nSuccessfully approved InstallPlan '$installplan'\n"
                else
                  printf "\nERROR: Failed to approve InstallPlan '$installplan'\n"
                  exit 1
                fi
              else
                printf "\nInstall Plan '$installplan' already approved (status: $approved)\n"
              fi
          imagePullPolicy: Always
          name: installplan-approver
          env:
            - name: SLEEP
              value: "20"
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ .serviceAccount.name | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
 