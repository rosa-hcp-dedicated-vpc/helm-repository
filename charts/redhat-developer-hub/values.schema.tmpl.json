{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/redhat-developer/rhdh-chart/main/charts/backstage/values.schema.json",
    "type": "object",
    "title": "Root Schema",
    "properties": {
        "upstream": {
            "title": "Upstream Backstage chart schema.",
            "$ref": "https://raw.githubusercontent.com/backstage/charts/backstage-{{ dependencies | selectattr('name', 'equalto', 'backstage') | map(attribute='version') | list | join('') }}/charts/backstage/values.schema.json",
            "default": {
                "backstage": {
                    "image": {
                        "registry": "quay.io",
                        "repository": "janus-idp/redhat-backstage-build",
                        "tag": "latest"
                    }
                }
            }
        },
        "global": {
            "type": "object",
            "properties": {
                "clusterRouterBase": {
                    "title": "Shorthand for users who do not want to specify a custom HOSTNAME. Used ONLY with the DEFAULT upstream.backstage.appConfig value and with OCP Route enabled.",
                    "type": "string",
                    "default": "apps.example.com"
                },
                "host": {
                    "title": "Custom hostname shorthand, overrides `global.clusterRouterBase`, `upstream.ingress.host`, `route.host`, and url values in `upstream.backstage.appConfig`",
                    "type": "string",
                    "default": ""
                },
                "dynamic": {
                    "title": "Dynamic plugins configuration.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "plugins": {
                            "title": "List of dynamic plugins that should be installed in the backstage application.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "package": {
                                        "title": "Package specification of the dynamic plugin to install. It should be usable by the `npm pack` command (for NPM packages) or the `skopeo copy` command (for OCI packages).",
                                        "type": "string"
                                    },
                                    "integrity": {
                                        "title": "Integrity checksum of the package. Optional for local packages and OCI packages. For OCI packages, you can specify the image digest in place of the tag in the 'package' field. Supported algorithms include: `sha512`, `sha384` and `sha256`. Refer to https://w3c.github.io/webappsec-subresource-integrity/#integrity-metadata-description for more information",
                                        "type": "string"
                                    },
                                    "pluginConfig": {
                                        "title": "Optional plugin-specific app-config YAML fragment.",
                                        "type": "object"
                                    },
                                    "disabled": {
                                        "title": "Disable the plugin.",
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "package"
                                ]
                            }
                        },
                        "includes": {
                            "title": "List of YAML files to include, each of which should contain a `plugins` array.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        }
                    }
                },
                "auth": {
                    "title": "Enable service authentication within Backstage instance",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "backend": {
                            "title": "Backend service to service authentication",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "title": "Enable backend service to service authentication, unless configured otherwise it generates a secret value",
                                    "type": "boolean",
                                    "default": true
                                },
                                "existingSecret": {
                                    "title": "Instead of generating a secret value, refer to existing secret",
                                    "type": "string",
                                    "default": ""
                                },
                                "value": {
                                    "title": "Instead of generating a secret value, use the following value",
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "route": {
            "title": "OpenShift Route parameters.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "annotations": {
                    "title": "Route specific annotations.",
                    "type": "object",
                    "default": {}
                },
                "enabled": {
                    "title": "Enable the creation of the route resource.",
                    "type": "boolean",
                    "default": false
                },
                "host": {
                    "title": "Set the host attribute to a custom value.",
                    "type": "string",
                    "default": "",
                    "examples": [
                        "https://bakstage.example.com"
                    ]
                },
                "path": {
                    "title": "Path that the router watches for, to route traffic for to the service.",
                    "type": "string",
                    "default": "/"
                },
                "wildcardPolicy": {
                    "title": "Wildcard policy if any for the route.",
                    "type": "string",
                    "default": "None",
                    "enum": [
                        "None",
                        "Subdomain"
                    ]
                },
                "tls": {
                    "title": "Route TLS parameters.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "Enable TLS configuration for the host defined at `route.host` parameter.",
                            "type": "boolean",
                            "default": false
                        },
                        "termination": {
                            "title": "Specify TLS termination.",
                            "type": "string",
                            "default": "edge",
                            "enum": [
                                "edge",
                                "reencrypt",
                                "passthrough"
                            ]
                        },
                        "certificate": {
                            "title": "Certificate contents.",
                            "type": "string",
                            "default": ""
                        },
                        "key": {
                            "title": "Key file contents.",
                            "type": "string",
                            "default": ""
                        },
                        "caCertificate": {
                            "title": "Cert authority certificate contents.",
                            "type": "string",
                            "default": ""
                        },
                        "destinationCACertificate": {
                            "title": "Contents of the ca certificate of the final destination.",
                            "type": "string",
                            "default": ""
                        },
                        "insecureEdgeTerminationPolicy": {
                            "title": "Indicates the desired behavior for insecure connections to a route.",
                            "type": "string",
                            "default": "Redirect",
                            "enum": [
                                "Redirect",
                                "None",
                                ""
                            ]
                        }
                    }
                }
            }
        },
        "test": {
            "title": "Test configuration for the Backstage chart.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "title": "Enable test configuration. If enabled, test resources will be created to verify the Helm Release has been successfully deployed using the `helm test` command.",
                    "type": "boolean",
                    "default": true
                },
                "image": {
                    "title": "Image to use for the test pod. Note that the image needs to have both the `sh` and `curl` binaries in it.",
                    "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "registry": {
                                "title": "Registry to use for the test pod image.",
                                "type": "string",
                                "default": "quay.io"
                            },
                            "repository": {
                                "title": "Repository to use for the test pod image.",
                                "type": "string",
                                "default": "curl/curl"
                            },
                            "tag": {
                                "title": "Tag to use for the test pod image.",
                                "type": "string",
                                "default": "latest"
                            }
                        }
                },
                "injectTestNpmrcSecret": {
                    "title": "Whether to inject a fake dynamic plugins npmrc secret. This is only used for testing purposes and should not be used in production. It is only relevant when `test.enabled` field is set to `true`.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "orchestrator": {
            "title": "orchestrator configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "title": "enabled flag",
                    "type": "boolean",
                    "default": false
                },
                "plugins": {
                    "title": "List of orchestrator plugins and their configuration",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "package": {
                                "title": "Package specification of the dynamic plugin to install. It should be usable by the `npm pack` command (for NPM packages) or the `skopeo copy` command (for OCI packages).",
                                "type": "string"
                            },
                            "integrity": {
                                "title": "Integrity checksum of the package. Optional for local packages and OCI packages. For OCI packages, you can specify the image digest in place of the tag in the 'package' field. Supported algorithms include: `sha512`, `sha384` and `sha256`. Refer to https://w3c.github.io/webappsec-subresource-integrity/#integrity-metadata-description for more information",
                                "type": "string"
                            },
                            "pluginConfig": {
                                "title": "Optional plugin-specific app-config YAML fragment.",
                                "type": "object"
                            },
                            "disabled": {
                                "title": "Disable the plugin.",
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "required": [
                            "package"
                        ]
                    }
                },
                "serverlessLogicOperator": {
                    "title": "serverlessLogicOperator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": true
                        }
                    }
                },
                "serverlessOperator": {
                    "title": "serverlessOperator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": true
                        }
                    }
                },
                "sonataflowPlatform": {
                    "title": "sonataflowPlatform configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "monitoring": {
                            "title": "monitoring configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "title": "enabled flag",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "eventing": {
                            "title": "eventing configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "broker": {
                                    "title": "broker configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "name": {
                                            "title": "name value",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "namespace": {
                                            "title": "namespace value",
                                            "type": "string",
                                            "default": ""
                                        }
                                    }
                                }
                            }
                        },
                        "resources": {
                            "title": "resources configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "requests": {
                                    "title": "requests configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "memory": {
                                            "title": "memory value",
                                            "type": "string",
                                            "default": "64Mi"
                                        },
                                        "cpu": {
                                            "title": "cpu value",
                                            "type": "string",
                                            "default": "250m"
                                        }
                                    }
                                },
                                "limits": {
                                    "title": "limits configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "memory": {
                                            "title": "memory value",
                                            "type": "string",
                                            "default": "1Gi"
                                        },
                                        "cpu": {
                                            "title": "cpu value",
                                            "type": "string",
                                            "default": "500m"
                                        }
                                    }
                                }
                            }
                        },
                        "externalDBsecretRef": {
                            "title": "Secret name for the user-created secret to connect an external DB",
                            "type": "string",
                            "additionalProperties": false
                        },
                        "externalDBName": {
                            "title": "Name for the user-configured external Database",
                            "type": "string",
                            "additionalProperties": false
                        },
                        "externalDBHost": {
                            "title": "Host for the user-configured external Database",
                            "type": "string",
                            "additionalProperties": false
                        },
                        "externalDBPort": {
                            "title": "Port for the user-configured external Database",
                            "type": "string",
                            "additionalProperties": false
                        },
                        "initContainerImage": {
                            "title": "Image for the init container used by the create-db job",
                            "type": "string",
                            "additionalProperties": false
                        },
                        "createDBJobImage": {
                            "title": "Image for the container used by the create-db job",
                            "type": "string",
                            "additionalProperties": false
                        }
                    }
                }
            }
        }
    }
}