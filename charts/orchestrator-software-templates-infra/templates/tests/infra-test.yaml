{{- if .Values.test.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-service-account
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-role
  namespace: {{ .Values.openshiftPipelines.subscription.namespace }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
rules:
  - apiGroups: ["operators.coreos.com"]
    resources: ["subscriptions"]
    verbs: ["list", "get"]
  - apiGroups: ["operators.coreos.com"]
    resources: ["clusterserviceversions", "csv"]
    verbs: ["list", "get", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-role-binding
  namespace: {{ .Values.openshiftPipelines.subscription.namespace }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-service-account
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-testing
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: test
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  serviceAccountName: {{ .Release.Name }}-service-account
  containers:
    - name: oc-client
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop: ["ALL"]
        runAsNonRoot: false
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      image: "{{ .Values.test.image.registry }}/{{ .Values.test.image.repository }}:{{ .Values.test.image.tag }}"
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -e
      
          echo "Starting Test"

          {{- if .Values.openshiftPipelines.enabled }}
          kubectl get subscription.operators.coreos.com {{ .Values.openshiftPipelines.subscription.name }} -n {{ .Values.openshiftPipelines.subscription.namespace }} || exit 1
          {{- end }}
            
          {{- if .Values.openshiftGitops.enabled }}
          echo "Checking OpenShift GitOps subscription..."
          kubectl get subscription.operators.coreos.com {{ .Values.openshiftGitops.subscription.spec.name }} -n {{ .Values.openshiftGitops.subscription.namespace }} || exit 1
          {{- end }}
        
          echo "Test passed!"
          exit 0
  restartPolicy: Never
{{- end }}