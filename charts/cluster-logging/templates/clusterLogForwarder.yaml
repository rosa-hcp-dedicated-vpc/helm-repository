apiVersion: observability.openshift.io/v1
kind: ClusterLogForwarder
metadata:
  annotations:
    observability.openshift.io/log-level: info
    argocd.argoproj.io/sync-wave: {{ .Values.syncwave | default 3 | quote }}
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true,Validate=false
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
  name: vector
  namespace: openshift-logging
spec:
  managementState: Managed
  outputs:
  - cloudwatch:
      authentication:
        iamRole:
          roleARN:
            key: credentials
            secretName: cloudwatch-credentials
          token:
            from: serviceAccount
        type: iamRole
      groupName: the-cluster-infrastructure
      region: ap-southeast-2
    name: cloudwatch-infrastructure
    type: cloudwatch
  - cloudwatch:
      authentication:
        iamRole:
          roleARN:
            key: credentials
            secretName: cloudwatch-credentials
          token:
            from: serviceAccount
        type: iamRole
      groupName: the-cluster.{.kubernetes.namespace_name||"unknown"}
      region: ap-southeast-2
    name: cloudwatch-namespace-all
    type: cloudwatch
  - name: openshift-logging-lokistack
    type: lokiStack
    lokiStack:
      authentication:
        token:
          from: serviceAccount
      target:
        name: openshift-logging-lokistack
        namespace: openshift-logging
    tls:
      ca:
        key: service-ca.crt
        configMapName: openshift-service-ca.crt
  pipelines:
  - name: input-cloudwatch-infrastructure
    inputRefs:
    - infrastructure
    outputRefs:
    - cloudwatch-infrastructure
  - name: input-cloudwatch-namespace-all
    inputRefs:
    - application
    outputRefs:
    - cloudwatch-namespace-all
  - name: input-openshift-logging-lokistack
    inputRefs:
    - application
    - infrastructure
    outputRefs:
    - openshift-logging-lokistack
  serviceAccount:
    name: logging