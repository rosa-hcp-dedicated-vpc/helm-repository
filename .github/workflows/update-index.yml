name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-charts: ${{ steps.changed-charts.outputs.charts }}
      has-changes: ${{ steps.changed-charts.outputs.has-changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed charts
        id: changed-charts
        run: |
          # Get list of changed Chart.yaml files
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep "charts/.*/Chart.yaml" || true)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No chart changes detected"
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "charts=[]" >> $GITHUB_OUTPUT
          else
            echo "Changed Chart.yaml files:"
            echo "$CHANGED_FILES"
            
            # Extract chart names
            CHANGED_CHARTS=$(echo "$CHANGED_FILES" | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')
            echo "Changed charts: $CHANGED_CHARTS"
            
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "charts=$CHANGED_CHARTS" >> $GITHUB_OUTPUT
          fi

  release-chart:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        chart: ${{ fromJson(needs.detect-changes.outputs.changed-charts) }}
      fail-fast: false  # Don't stop other charts if one fails
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "root"
          git config user.email "root@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Package chart ${{ matrix.chart }}
        run: |
          echo "📦 Processing chart: ${{ matrix.chart }}"
          
          # Check if chart directory exists
          if [ ! -d "charts/${{ matrix.chart }}" ]; then
            echo "❌ Chart directory not found: charts/${{ matrix.chart }}"
            exit 1
          fi
          
          # Create package directory and package the chart
          mkdir -p .cr-release-packages
          helm package charts/${{ matrix.chart }} --destination .cr-release-packages/
          
          # List what was created
          ls -la .cr-release-packages/
        
      - name: Upload packaged chart
        uses: actions/upload-artifact@v4
        with:
          name: chart-${{ matrix.chart }}
          path: .cr-release-packages/*.tgz
          retention-days: 1

      - name: Report status
        if: always()
        run: |
          echo "📊 Chart: ${{ matrix.chart }}"
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Successfully processed ${{ matrix.chart }}"
          else
            echo "❌ Failed to process ${{ matrix.chart }}"
          fi

  check-release-success:
    needs: [detect-changes, release-chart]
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    outputs:
      all-successful: ${{ steps.check-success.outputs.all-successful }}
    steps:
      - name: Check if all chart releases were successful
        id: check-success
        run: |
          echo "🔍 Checking release results..."
          
          # Get the results from the matrix job
          RESULTS='${{ toJson(needs.release-chart.result) }}'
          echo "Release results: $RESULTS"
          
          # Check if all jobs succeeded
          if echo "$RESULTS" | grep -q "failure\|cancelled"; then
            echo "❌ Some chart releases failed"
            echo "all-successful=false" >> $GITHUB_OUTPUT
          else
            echo "✅ All chart releases successful"
            echo "all-successful=true" >> $GITHUB_OUTPUT
          fi

  release-and-index:
    needs: [detect-changes, release-chart, check-release-success]
    if: needs.detect-changes.outputs.has-changes == 'true' && needs.check-release-success.outputs.all-successful == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "root"
          git config user.email "root@users.noreply.github.com"

      - name: Download all packaged charts
        uses: actions/download-artifact@v4
        with:
          path: .cr-release-packages
          pattern: chart-*
          merge-multiple: true

      - name: List packaged charts
        run: |
          echo "📦 Packaged charts ready for release:"
          ls -la .cr-release-packages/ || echo "No charts to release"

      - name: Run chart-releaser
        if: hashFiles('.cr-release-packages/*.tgz') != ''
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts
          packages_with_index: true
        env:
          CR_TOKEN: "${{ secrets.HELM }}"

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.HELM }}
          publish_dir: .cr-index
          destination_dir: .

  report-failures:
    needs: [detect-changes, release-chart, check-release-success]
    if: needs.detect-changes.outputs.has-changes == 'true' && needs.check-release-success.outputs.all-successful == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Report failed releases
        run: |
          echo "❌ Some chart releases failed - skipping pages deployment"
          echo "## ❌ Release Failed" >> $GITHUB_STEP_SUMMARY
          echo "**Reason**: One or more chart releases failed" >> $GITHUB_STEP_SUMMARY
          echo "**Action Required**: Check individual chart release logs and fix issues" >> $GITHUB_STEP_SUMMARY
          exit 1